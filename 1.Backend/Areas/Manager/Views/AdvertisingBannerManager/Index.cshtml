@addTagHelper *, Sakura.AspNetCore.Mvc.PagedList
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@addTagHelper *, PT.UI
@inject Microsoft.Extensions.Options.IOptions<PT.Domain.Model.BaseSettings> _baseSettings;
@using Microsoft.AspNetCore.Mvc.Rendering

@{
    Layout = "~/Views/Shared/_Admin.cshtml";
    var status = Context.Request.Query["status"].ToString();
    var isMultiLang = _baseSettings.Value.MultipleLanguage;
    var defaultLang = _baseSettings.Value.DefaultLanguage;
    var statusOptions = new[]
    {
        new { Id = "radio_0", Value = "", Label = "Tất cả", Class = "radio-col-blue" },
        new { Id = "radio_2", Value = "true", Label = "Sử dụng", Class = "radio-col-green" },
        new { Id = "radio_3", Value = "false", Label = "Không sử dụng", Class = "radio-col-red" }
    };
}

<div grid-index data-url="@Url.Action("index")">
    <input type="hidden" name="id" grid-input />
    <input type="hidden" name="code" grid-input />
    <div class="row head-v2">
        <div class="col-md-4">
            <div class="block-header">
                <h2>
                    <i class="material-icons">insert_photo</i> QUẢN LÝ BANNER QUẢNG CÁO
                    <span class="label label-danger label-t">Danh sách</span>
                </h2>
                <ol class="breadcrumb breadcrumb-t">
                    <li><a href="/Admin">Trang điều khiển</a></li>
                    <li class="active">Danh sách banner quảng cáo</li>
                </ol>
            </div>
        </div>
        <div class="col-md-8">
            <div search-advance class="input-group mb-0">
                <div class="input-group-addon input-group-addon-t">
                    <span class="text-addonsearch">Tìm kiếm</span>
                </div>
                <div class="divcansearch">
                    <input grid-input type="text" name="key" class="form-control inputsearch keywidth" placeholder="Tìm theo tên" />
                    <div search-form class="searchExtensionForm">
                        <a search-close title="Đóng" class="btnCloseSearchEx" aria-label="Đóng tìm kiếm nâng cao">
                            <span aria-hidden="true">×</span>
                        </a>
                        <div class="row">
                            <div class="col-md-12">
                                <div class="form-group">
                                    <label class="form-label">Trạng thái</label>
                                    <div class="controls">
                                        @foreach (var opt in statusOptions)
                                        {
                                            <input @(status == opt.Value ? "checked='checked'" : "") grid-input type="radio" id="@opt.Id" value="@opt.Value" name="status" class="with-gap @opt.Class" />
                                            <label for="@opt.Id" class="labelradio">@opt.Label</label>
                                            @if (opt != statusOptions.Last()) { <text>&nbsp;</text> }
                                        }
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <a search-menu class="searchExtension" title="Tìm kiếm nâng cao" aria-label="Tìm kiếm nâng cao">
                        <i class="material-icons">keyboard_arrow_down</i>
                    </a>
                </div>
                <div style="display:inline-block; margin-right:8px;">
                    <select grid-input name="portalId" class="form-control input-sm form-control-t show-tick" onchange="getDataGrid(1)">
                        <option value="">Tất cả portal</option>
                        @if (ViewBag.PortalSelectList != null)
                        {
                            foreach (SelectListItem p in (IEnumerable<SelectListItem>)ViewBag.PortalSelectList)
                            {
                                <option value="@p.Value">@p.Text</option>
                            }
                        }
                    </select>
                </div>
                <span class="input-group-addon btn-group-addon">
                    <button onclick="getDataGrid(1)" type="button" class="btn bg-indigo waves-effect btn-search" aria-label="Tìm kiếm">
                        <i class="material-icons">search</i>
                    </button>
                </span>
                <div class="input-group-addon btn-group-addon pl-10">
                    @if (isMultiLang)
                    {
                        <div class="btn-group">
                            <button type="button" class="btn btn-primary dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                <i class="material-icons">add</i><span>Thêm mới</span> <span class="caret"></span>
                            </button>
                            <ul class="dropdown-menu drcontrol">
                                @foreach (var item in PT.Shared.ListData.ListLanguage)
                                {
                                    <li>
                                        <a button-popup data-target="#myModalBig" asp-action="Create" asp-route-language="@item.Id">
                                            <img src="@item.Icon" /> @item.Name
                                        </a>
                                    </li>
                                }
                            </ul>
                        </div>
                    }
                    else
                    {
                        <a button-popup data-target="#myModalBig" asp-action="Create" asp-route-language="@defaultLang" class="btn btn-primary dropdown-toggle">
                            <i class="material-icons">add</i><span>Thêm menu</span>
                        </a>
                    }
                </div>
            </div>
        </div>
    </div>
    <div class="row clearfix">
        <div class="col-md-12">
            <div grid-loading class="card card-t card-loading">
                <div class="header bg-indigo">
                    <h4 grid-num-row class="num-t m-l-20">
                        Đang tải...
                    </h4>
                    <ul class="header-dropdown m-r--5 header-dropdown-t">
                        <li class="dropdown">
                            <a href="javascript:void(0);" class="dropdown-toggle" data-toggle="dropdown" role="button" aria-haspopup="true" aria-expanded="false">
                                <i class="material-icons">apps</i>
                            </a>
                            <ul class="dropdown-menu pull-left">
                                @* <li><a href="javascript:void(0);">Khóa tài khoản đã chọn</a></li>*@
                                <li><a href="javascript:void(0);">Đóng lại</a></li>
                            </ul>
                        </li>
                    </ul>
                    <div class="controlOrderBy">
                        <div style="width:110px;" class="itemorder selectOrder">
                            <select grid-input onchange="getDataGrid(1)" data-header="Loại sắp xếp" name="ordertype" class="form-control input-sm form-control-t show-tick">
                                <option data-icon="glyphicon-sort-by-attributes" value="asc">Tăng dần</option>
                                <option data-icon="glyphicon-sort-by-attributes-alt" value="desc">Giảm dần</option>
                            </select>
                        </div>
                        <div style="width:200px;" class="itemorder selectOrder">
                            <select grid-input onchange="getDataGrid(1)" data-header="Xắp xếp theo" name="orderby" class="form-control input-sm form-control-t show-tick">
                                <option data-icon="glyphicon glyphicon-sort" value="datePosted">Xếp theo thời gian tạo</option>
                                <option data-icon="glyphicon glyphicon-sort" value="name">Xếp theo tên hiển thị</option>
                            </select>
                        </div>
                    </div>
                </div>
                <div class="body body-t">
                    <partial name="_TabLanguage" model="@(new PT.Domain.Model.TabLanguageModel { Language = Context.Request.Query["language"] })" />
                    <div class="table-responsive">
                        <table class="table table-striped table-bordered table-hover table-t">
                            <thead>
                                <tr>
                                    <th style="width:60px;" class="text-center">STT</th>
                                    <th>Tên</th>
                                    <th style="width:120px;">Mã</th>
                                    <th style="width:90px;">Hành động</th>
                                </tr>
                            </thead>
                            <tbody grid-data></tbody>
                        </table>
                    </div>
                    <div class="pl-20 pr-20 divpagination">
                        <div class="row">
                            <div class="col-md-2 m-b-0">
                                <div class="input-group m-b-0">
                                    <span class="input-group-addon">
                                        Bản ghi/trang
                                    </span>
                                    <div class="form-line form-line-t form-line-pagesize">
                                        <select name="limit" onchange="getDataGrid(1)" class="form-control show-tick" grid-input>
                                            <option selected value="30">30</option>
                                            <option value="40">40</option>
                                            <option value="50">50</option>
                                        </select>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-10  m-b-0">
                                <nav grid-pagination class="pg-t"></nav>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script src="~/Content/Admin/plugins/nestable/jquery.nestable.js"></script>
    <link href="~/Content/Admin/plugins/nestable/jquery-nestable.css" rel="stylesheet" />
    <script src="~/Content/Admin/plugins/codemirror/js/codemirror.js"></script>
    <link href="~/Content/Admin/plugins/codemirror/css/codemirror.css" rel="stylesheet" />
    <script src="~/Content/Admin/plugins/codemirror/js/xml.js"></script>
    <script src="~/Content/Admin/plugins/codemirror/js/javascript.js"></script>
    <script src="~/Content/Admin/plugins/codemirror/js/css.js"></script>
    <script src="~/Content/Admin/plugins/codemirror/js/htmlmixed.js"></script>
    <script src="~/Content/Admin/plugins/codemirror/js/matchbrackets.js"></script>
    <script>
        var _page = 1;
        var serializedData = [];
        $(function () {
            $("[search-advance]").toSearch();
            $("[button-popup]").toPopup();
            $("[button-open-file-manager]").toButtonOpenFile();
            $("[button-submit]").toSubmit(function (rs, $thisButtonSubmit, type) {
                setTimeout(function () {
               $("[button-update-status]").click();
                    if (type == "createItem") {
                        $("[button-static-add]").click();
                        initData($thisButtonSubmit.attr("data-id"));
                    }
                    else {
                        reGetDataGrid();
                    }
                }, 200);
            }, null, function (type) {
                if (type != "createItem") {
                    onRefeshValue();
                }
                else {
                    onRefeshValue2();
                }
            });
            $("[button-delete]").toDelete(function (rs, $this, returnurl, type) {
                setTimeout(function () {
                    if (type == "createItem") {
                        $("[button-static-add]").click();
                        initData($this.attr("data-id"));
                    }
                    else {
                        reGetDataGrid();
                    }
                }, 200);
            });
            $("[button-post]").toPost();
            $("[button-static]").toStaticForm(function ($this) {
                $("[form-static]").scrollView();
            });
            $("[button-open-file-manager]").toButtonOpenFile();
            getDataGrid(1, true);

            $("[button-update-status]").toPost(function (rs, $this) {
                swal({
                    title: "Thông báo!",
                    text: rs.message,
                    type: rs.type,
                    confirmButtonText: "Đóng!"
                });
                setTimeout(function () {
                    $this.button('reset');
                    setTimeout(function () {
                        statusButtonEdit(false);
                    }, 200);
                }, 300);

            }, function () {
                return serializedData;
            });
        });
        var cm1, cm2;
        function initRickText() {
            cm1 = CodeMirror.fromTextArea(document.getElementById("Template"), {
                lineNumbers: true,
                mode: "text/html",
                matchBrackets: true,
                lineWrapping: true,
                autoRefresh: true
            });
            $('#collapseOne_1').on('show.bs.collapse', function () {
                setTimeout(function () {
                    onRefesh();
                }, 300);
            })
        }
        function initRickText2() {
            cm2 = CodeMirror.fromTextArea(document.getElementById("templateItem"), {
                lineNumbers: true,
                mode: "text/html",
                matchBrackets: true,
                lineWrapping: true,
                autoRefresh: true
            });
        }
        function onRefeshValue() {
            document.getElementById("Template").value = cm1.getValue()
        }
        function onRefeshValue2() {
            document.getElementById("templateItem").value = cm2.getValue()
        }
        function onRefesh() {
            cm1.refresh();
        };
        function getDataGrid(page, first = false) {
            _page = page;
            $("[grid-index]").toGridView(first, page, function () {
                if (decodeURIComponent(location.hash.substr(1)) == "openPopup") {
                    try {
                        $("[data-open-edit]")[0].click();
                    } catch (e) {
                        console.log(e);
                    }
                }
            });
        }
        function reGetDataGrid(e) {
            if (e != null) {
                _page = 1;
                $("[name='language']").val($(e).attr("data-val"));
            }
            getDataGrid(_page, false);
        }
        $(document).on("click", "[button-cancel-status]", function () {
            initData($(this).attr("data-id"));
            statusButtonEdit(false);
        });
        function statusButtonEdit(status) {
            $("[button-update-status]").prop("disabled", !status);
            $("[button-cancel-status]").prop("disabled", !status);
        }

        function initData(id) {
            var $loading = bindLoading("[loading-tree]");
            $.get("@Url.Action("Items")" + "?id=" + id, function (data) {
                $("#bindCategory").html(data);
                $('.dd').nestable({ maxDepth: 1 });
                $('.dd').on('change', function () {
                    var $this = $(this);
                    serializedData = window.JSON.stringify($($this).nestable('serialize'));
                    statusButtonEdit(true);
                });
                $loading.waitMe('hide');
            });
        }
    </script>
}