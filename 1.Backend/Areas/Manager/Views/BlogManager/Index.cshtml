@addTagHelper *, Sakura.AspNetCore.Mvc.PagedList
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@addTagHelper *, PT.UI
@inject Microsoft.Extensions.Options.IOptions<PT.Domain.Model.BaseSettings> _baseSettings;
@{
    Layout = "~/Views/Shared/_Admin.cshtml";
}
<div grid-index data-url="@Url.Action("index")">
    <div class="row head-v2">
        <div class="col-md-6">
            <div class="block-header">
                <h2><i class="material-icons">assignment</i> QUẢN LÝ TIN TỨC <span class="label label-danger label-t">Danh sách</span></h2>
                <ol class="breadcrumb breadcrumb-t">
                    <li>
                        <a href="/Admin">
                            Trang điều khiển
                        </a>
                    </li>
                    <li class="active">
                        Danh sách tin tức
                    </li>
                </ol>
            </div>
        </div>
        <div class="col-md-6">
        </div>
    </div>
    <div class="row clearfix">
        <div class="col-md-12">
            <div class="new-form-search">
                <div class="row">
                    <div class="col-md-2">
                        <div class="form-group" style="margin-bottom:0px;">
                            <label class="form-label">Từ khóa</label>
                            <div class="controls">
                                <input class="form-control input-sm form-control-t" grid-input type="text" name="key">
                            </div>
                        </div>
                    </div>
                    <div class="col-md-2">
                        <div class="form-group" style="margin-bottom:0px;">
                            <label class="form-label">Cổng</label>
                            <div class="controls">
                                <select grid-input name="portalId" asp-items="@((SelectList)ViewData["PortalSelectList"])" class="input-sm form-control-t show-tick">
                                    <option value="">Tất cả</option>
                                </select>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-2">
                        <div class="form-group clearfix">
                            <label class="form-label">Tag</label>
                            <div class="controls">
                                <select data-live-search="true" data-size="10" grid-input name="tagId" asp-items="@((SelectList)ViewData["TagSelectList"])" class="input-sm form-control-t show-tick">
                                    <option selected value="">Tất cả</option>
                                </select>
                            </div>
                        </div>
                    </div>

                    <div class="col-md-2">
                        <div class="form-group clearfix">
                            <label class="form-label">Danh mục</label>
                            <div class="controls">
                                <select grid-input data-live-search="true" name="categoryId" class="input-sm form-control-t show-tick">
                                    <option selected value="">Tất cả</option>
                                </select>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-2">
                        <div class="form-group" style="margin-bottom:0px;">
                            <label class="form-label">Trạng thái</label>
                            <div class="controls">
                                <select grid-input name="status" class="input-sm form-control-t show-tick">
                                    <option value="">Tất cả</option>
                                    <option value="true">Sử dụng</option>
                                    <option value="false">Không sử dụng</option>
                                </select>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-2">
                        <div class="can-button-search">
                            <a onclick="getDataGrid(1)" class="btn bg-indigo dropdown-toggle">
                                <i class="material-icons">search</i><span>Tìm kiếm</span>
                            </a>
                            @if (_baseSettings.Value.MultipleLanguage)
                            {
                                <div class="btn-group">
                                    <button type="button" class="btn btn-primary dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                        <i class="material-icons">add</i><span>Thêm mới</span> <span class="caret"></span>
                                    </button>
                                    <ul class="dropdown-menu drcontrol">
                                        @foreach (var item in PT.Shared.ListData.ListLanguage)
                                        {
                                            <li><a button-popup data-target="#myModalBig" asp-action="Create" asp-route-language="@item.Id"><img src="@item.Icon" /> @item.Name</a></li>
                                        }
                                    </ul>
                                </div>
                            }
                            else
                            {
                                <a button-popup data-target="#myModalBig" asp-action="Create" asp-route-language="@_baseSettings.Value.DefaultLanguage" class="btn btn-primary dropdown-toggle">
                                    <i class="material-icons">add</i><span>Thêm menu</span>
                                </a>
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-12">
            <div grid-loading class="card card-t card-loading">
                <div class="header bg-indigo">
                    <h4 grid-num-row class="num-t m-l-20">
                        Đang tải...
                    </h4>
                    <ul class="header-dropdown m-r--5 header-dropdown-t">
                        <li class="dropdown">
                            <a href="javascript:void(0);" class="dropdown-toggle" data-toggle="dropdown" role="button" aria-haspopup="true" aria-expanded="false">
                                <i class="material-icons">apps</i>
                            </a>
                            <ul class="dropdown-menu pull-left">
                                <li><a href="javascript:void(0);">Đóng lại</a></li>
                            </ul>
                        </li>
                    </ul>
                    <div class="controlOrderBy">
                        <div style="width:110px;" class="itemorder selectOrder">
                            <select grid-input onchange="getDataGrid(1)" data-header="Loại sắp xếp" name="ordertype" class="form-control input-sm form-control-t show-tick">
                                <option data-icon="glyphicon-sort-by-attributes" value="asc">Tăng dần</option>
                                <option data-icon="glyphicon-sort-by-attributes-alt" value="desc">Giảm dần</option>
                            </select>
                        </div>
                        <div style="width:200px;" class="itemorder selectOrder">
                            <select grid-input onchange="getDataGrid(1)" data-header="Xắp xếp theo" name="orderby" class="form-control input-sm form-control-t show-tick">
                                <option data-icon="glyphicon glyphicon-sort" value="datePosted">Xếp theo thời gian đăng</option>
                                <option data-icon="glyphicon glyphicon-sort" value="name">Xếp theo tên hiển thị</option>
                            </select>
                        </div>
                    </div>
                </div>
                <div class="body body-t">
                    <partial name="_TabLanguage" model="@(new PT.Domain.Model.TabLanguageModel { Language = Context.Request.Query["language"] })" />
                    <div class="table-responsive">
                        <table  class="table table-striped table-bordered table-hover table-t table-fix">
                            <thead>
                                <tr>
                                    <th style="width:60px;" class="text-center">STT</th>
                                    <th>Tên</th>
                                    <th >Danh mục</th>
                                    <th >Tags</th>
                                    <th style="width:150px;">Tác giả</th>
                                    <th style="width:120px;">Ngày đăng</th>
                                    <partial name="_AdminTheadTableModule" />
                                    <th style="width:200px;">Cổng</th>
                                    <th style="width:120px;">Hành động</th>
                                </tr>
                            </thead>
                            <tbody  grid-data></tbody>
                        </table>
                    </div>
                    <div class="pl-20 pr-20 divpagination">
                        <div class="row">
                            <div class="col-md-2 m-b-0">
                                <div class="input-group m-b-0">
                                    <span class="input-group-addon">
                                        Bản ghi/trang
                                    </span>
                                    <div class="form-line form-line-t form-line-pagesize">
                                        <select name="limit" onchange="getDataGrid(1)" class="form-control show-tick" grid-input>
                                            <option selected value="30">30</option>
                                            <option value="40">40</option>
                                            <option value="50">50</option>
                                        </select>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-10  m-b-0">
                                <nav grid-pagination class="pg-t">
                                </nav>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script src="~/Content/Admin/plugins/ckeditor/ckeditor.js"></script>
    <script src="~/Content/Admin/plugins/jstree/jstree.min.js"></script>
    <link href="~/Content/Admin/plugins/jstree/themes/default/style.css" rel="stylesheet" />
    <link href="~/Content/Admin/plugins/jstree/themes/default-dark/style.css" rel="stylesheet" />

    <script>
        var contentPageRelated = [];
        var contentPageReference =[];

        var _page = location.search.page > 0 ? location.search.page : 1;
        $(function () {
            bindCategory($("[name='language']").val(), '@Context.Request.Query["categoryId"].ToString()');
            bindTag($("[name='language']").val(), '@Context.Request.Query["tagId"].ToString()')
            $("[search-advance]").toSearch();
            $("[button-popup]").toPopup();
            $("[button-open-file-manager]").toButtonOpenFile();
            $("[button-submit]").toSubmit();
            $("[button-delete]").toDelete();
            $("[button-upload]").toUploadFile();
            $("[button-post]").toPost();
            getDataGrid(1, true);
        });

        $(document).on("click", "[button-add-related]", function (e) {
            var data = $("#BlogId");
            if (data.val() == null) {
                alertify.notify("Bạn chưa chọn một bài viết nào", "warning", 5);
                return;
            }
            else {
                var kt = contentPageRelated.find(x => x.id == data.val());
                if (kt != null && kt != undefined) {
                    alertify.notify("Bài viết liên quan đã tồn tại", "warning", 5);
                    return;
                }
                contentPageRelated.push({ id: data.val(), text: data.find("option:selected").text() })
                alertify.notify("Thêm một bài viết liên quan, click lưu thay đổi để lưu lại những bài viết liên quan vừa thêm", "success", 5);
                bindRelated();
            }
        });

        function paseRelated(str) {
            if (str == null || str == undefined || str == "") {
                contentPageRelated =[];
            }
            else {
                console.log(str);
                contentPageRelated = str;
            }
            bindRelated();
        }

        function bindRelated() {
            if (contentPageRelated.length > 0) {
                var str = "";
                $(contentPageRelated).each(function (i, item) {
                    str += "<tr><td class=\"text-center\">" + (i + 1) + "</td><td>" + item.text + "</td><td><a  title=\"Xóa\" class=\"btn btn-danger waves-effect btncontrolgrid\" onclick=\"remoteRelated(" + item.id + ")\"><i class=\"material-icons iconcontrol\">delete_forever</i></a></td></tr>";
                });
                $("[bind-related]").html(str);
            }
            else {
                $("[bind-related]").html("<tr><td colspan='369'>Chưa có bài viết liên quan nào</td></tr>");
            }
            $("[name='ContentPageRelatedIds']").val(contentPageRelated.map(x => x.id).join(','));
        }

        function remoteRelated(id) {
            $.each(contentPageRelated, function (i) {
                if (contentPageRelated[i].id == id) {
                    contentPageRelated.splice(i, 1);
                    bindRelated();
                    alertify.notify("Xóa một bài viết liên quan, click lưu thay đổi để lưu lại những bài viết liên quan vừa thêm", "success", 5);
                    return false;
                }
            });
        }

        function initRickText(pathUpload) {
            pathUpload = pathUpload.replace(/&amp;/g, "&");
            $("ricktextContent").toRickText({ customConfig: 'configRickText.js', filebrowserUploadUrl: pathUpload });
            $("[button-update-status]").toPost(function (rs, $this) {
                swal({
                    title: "Thông báo!",
                    text: rs.message,
                    type: rs.type,
                    confirmButtonText: "Đóng!"
                });
                setTimeout(function () {
                    $this.button('reset');
                    setTimeout(function () {
                        statusButtonEdit(false);
                    }, 200);
                }, 300);

            }, function () {
                return serializedData;
            });
        }

        function initAutoComplate() {
            $("#TagIds").toTagsInput(function ($data) {
                $data.language = $("[form-edit] [name='Language']").val();
                return $data;
            });
        }

        function initAutoComplate2() {
            $("#BlogId").toSelectAutocomplete({},function ($data) {
                $data.type = function () {
                    return $("[form-edit] [name='Language']").val();
                };
                return $data;
            });
        }

        function getDataGrid(page, first = false) {
            _page = page;
            $("[grid-index]").toGridView(first, page);
        }

        function reGetDataGrid(e) {
            if (e != null) {
                  _page = 1;
                $("[name='language']").val($(e).attr("data-val"));
                bindCategory($("[name='language']").val(), "");
                bindTag($("[name='language']").val(), '')
                $("[name='categoryId']").val("").selectpicker('refresh');
                $("[name='tagId']").empty().append("<option value=''>Tất cả</option>");
                $("[name='tagId']").val("").selectpicker('refresh');
            }
            getDataGrid(_page, false);
        }

         function getTreeCategory(language, id = 0, portalId = 1) {
              $.post("@Url.Action("TreeCategory")?language=" + language + "&id=" + id+ "&portalId=" + portalId, function (data) {
                var $treeview = $('#using_json_2').jstree({
                    'check_callback': true,
                    'core': {
                        'data': data,
                        "themes": {
                            "dots": true,
                            "icons": false
                        }
                    },
                    "plugins": ["checkbox", "changed"]
                }).on("changed.jstree", function (e, data) {
                    if (data.node != undefined) {
                        var parrents = "";
                        if (data.node.parents != null) {
                            parrents = data.node.parents.join(",");
                        }
                        var newStr = parrents + "," + data.selected.toString();
                        newStr = newStr.replace("#", "-1");
                        $("[name='CategoryIds']").val(newStr);
                    }
                });
                $treeview.on('ready.jstree', function () {
                    $treeview.jstree('open_all');
                });
            });
        }

        function bindCategory(language, setvalue = "") {
            $.get("@Url.Action("SearchCategory")?language=" + language, function (data) {
                $("[name='categoryId']").empty();
                $("[name='categoryId']").append("<option value=''>Tất cả</option>")
                for (i = 0; i < data.length; i++) {
                    $("[name='categoryId']").append("<option value='" + data[i].value + "'>" + data[i].text + "</option>")
                }
                $("[name='categoryId']").val(setvalue).selectpicker('refresh');
            })
        }
        function bindTag(language, setvalue = "") {
            $.get("@Url.Action("SearchTag")?language=" + language, function (data) {
                    $("[name='tagId']").empty();
                    $("[name='tagId']").append("<option value=''>Tất cả</option>")
                    for (i = 0; i < data.length; i++) {
                        $("[name='tagId']").append("<option value='" + data[i].value + "'>" + data[i].text + "</option>")
                    }
                    $("[name='tagId']").val(setvalue).selectpicker('refresh');
                })
        }


         $(document).on("click", "[button-add-reference]", function (e) {
            var name = $("#NameReference");
            var url = $("#UrlReference");

            if (name.val() == null || name.val() == "") {
                alertify.notify("Bạn chưa nhập tên nguồn tham khảo", "warning", 5);
                return;
            }
             else if (url.val() == null || url.val() == "") {
                alertify.notify("Bạn chưa nhập đường dẫn nguồn tham khảo", "warning", 5);
                return;
            }
            else {
                contentPageReference.push({ Id : 0 ,Name: $("#NameReference").val(), Href: $("#UrlReference").val(), type: 1 })
                alertify.notify("Thêm nguồn tham khảo thành công, click lưu thay đổi để lưu lại nguồn tham khảo vừa thêm", "success", 5);
                $("#NameReference").val("");
                $("#UrlReference").val("");

                bindReference();
            }
        });

        function paseReference(str) {
            if (str == null || str == undefined || str == "") {
                contentPageReference =[];
            }
            else {
                contentPageReference = str;
            }
            bindReference();
        }

       function bindReference() {
           var referenceStt = 1;
            if (contentPageReference.length > 0) {
                var str = "";
                $(contentPageReference).each(function (i, item) {
                    item.stt = referenceStt;
                    if (item.type == 3) {

                    }
                    else {
                        str += "<tr><td class=\"text-center\">" + (i + 1) + "</td><td><a class='text-primary text-name' target='_blank' href='" + item.Href + "'>" + item.Name + "</a></td><td><a  title=\"Xóa\" class=\"btn btn-danger waves-effect btncontrolgrid\" onclick=\"remoteReference(" + referenceStt + ")\"><i class=\"material-icons iconcontrol\">delete_forever</i></a></td></tr>";
                    }
                    referenceStt++;
                });
                $("[bind-reference]").html(str);
            }
            else {
                $("[bind-reference]").html("<tr><td colspan='369'>Chưa có nguồn tham khảo nào</td></tr>");
            }
            $("[name='ContentPageReferenceIds']").val(JSON.stringify(contentPageReference));
       }

        function remoteReference(stt) {
            $.each(contentPageReference, function (i) {
                if (contentPageReference[i].stt == stt) {
                    contentPageReference[i].type = 3;
                    bindReference();
                    alertify.notify("Xóa một nguồn tham khảo, click lưu thay đổi để lưu lại nguồn liên quan liên quan vừa thêm", "success", 5);
                    return false;
                }
            });
        }

    </script>
}
