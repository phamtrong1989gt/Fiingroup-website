@addTagHelper *, Sakura.AspNetCore.Mvc.PagedList
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@addTagHelper *, PT.UI
@{
    Layout = "~/Views/Shared/_Admin.cshtml";
}

<div grid-index data-url="@Url.Action("index")">
    <div class="row head-v2">
        <div class="col-md-4">
            <div class="block-header">
                <h2><i class="material-icons">contact_mail</i> Quản lý đơn hẹn khám <span class="label label-danger label-t">Danh sách</span></h2>
                <ol class="breadcrumb breadcrumb-t">
                    <li>
                        <a href="/Admin">
                            Trang điều khiển
                        </a>
                    </li>
                    <li class="active">
                        Danh sách lịch hẹn
                    </li>
                </ol>
            </div>
        </div>
    </div>
    <div class="row clearfix">
        <div class="col-md-12">
            <div class="card card-loading">
                <div class="body">
                    <div class="row">
                        <div class="col-md-8" loading-edit>
                            <div class="labelinfo-t bg-info mb-10">
                                Lên lịch
                            </div>
                            <div>
                                <div class="form-group">
                                    <div class="input-group input-group-t">
                                        <div class="input-group-addon br-none">
                                            Xem theo bác sĩ
                                        </div>
                                        <select asp-items="@((SelectList)ViewData["EmployeeSelectList"])" data-live-search="true" name="employeeId" class="input-sm form-control-t show-tick with-ajax"></select>
                                    </div>
                                </div>
                            </div>
                            <div id="calendar">
                            </div>
                        </div>
                        <div class="col-md-4" grid-index-slideshow data-url="@Url.Action("Index")" data-ischangeurl="true">
                            <div class="labelinfo-t bg-info mb-10">
                                Danh sách đơn hẹn
                            </div>
                            <div>
                                <div class="form-group">
                                    <div class="input-group input-group-t">
                                        <div class="input-group-addon br-none">
                                            Tìm kiếm
                                        </div>
                                        <input type="text" grid-input name="key" placeholder="Tìm theo tên, số điện thoại, email" class="form-control input-sm form-control-t">
                                        <div class="input-group-addon btn-group-addon btn-group-addon-form-group">
                                            <a onclick="getDataGrid(1)" class="btn btn-icon btn-danger waves-effect"><i class="material-icons">search</i></a>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="format-list">
                                <div id='external-events'>
                                    <div class="listevent">
                                        <div grid-loading grid-data style="min-height:100px;">
                                        </div>
                                        <div class="mt-20">
                                            <nav grid-pagination class="pg-t"></nav>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

        </div>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script src="~/Content/Admin/plugins/jquery-ui/jquery-ui.min.js"></script>
    <link href="~/Content/Admin/plugins/calendar/fullcalendar.min.css" rel="stylesheet" />
    <script src="~/Content/Admin/plugins/calendar/moment.min.js"></script>
    <script src="~/Content/Admin/plugins/calendar/fullcalendar.min.js"></script>
    <script src="~/Content/Admin/plugins/calendar/locale-all.js"></script>
    <script>
        var _page = 1;
        var viewName;
        $("[button-submit]").toSubmit(function (rs, $this) {
            var dl = rs.data;
            var list = baseCalendar.fullCalendar('clientEvents');
            var event = list.find(x => x._id == dl.uniqueId);
            event.isChange = true;
            event.start = dl.start;
            event.end = dl.end;
            baseCalendar.fullCalendar('updateEvent', event);
        });
        getDataGrid(false, 1);
        $("[name='employeeId']").on("change", function () {
            initData(viewName, null);
        });

        var baseCalendar = $('#calendar').fullCalendar({
            header: {
                left: 'prev,next today',
                center: 'title',
                right: 'month,agendaWeek,agendaDay,listMonth'
            },
            defaultDate: '@DateTime.Now.ToString("yyyy-MM-dd")',
            locale: "vi",
            buttonIcons: true, // show the prev/next text
            weekNumbers: true,
            navLinks: true, // can click day/week names to navigate views
            editable: true,
            allDaySlot: false,
            eventLimit: true, // allow "more" link when too many events
            droppable: true, // this allows things to be dropped onto the calendar
            eventReceive: function (event) {
                updateSlide(event);
            },
            eventDrop: function (event, delta, revertFunc) {
                updateSlide(event);
            },
            eventResize: function (event, delta, revertFunc) {
                updateSlide(event);
            },
            eventClick: function (calEvent, jsEvent, view) {
                var data = {
                    uniqueId: calEvent._id,
                    isChange: calEvent.isChange,
                    contactId: calEvent.contactId,
                    start: calEvent.start,
                    end: calEvent.end,
                    title: calEvent.title
                };
                $("[popup-trong-dep-zai]").initPopup({
                    form: "[form-edit-schedule]",
                    target: "#myModalNormal",
                    action: "@Url.Action("EditSchedule")?data=" + JSON.stringify(data)
                });
            },
            viewRender: function (view, element) {
                viewName = view.name;
                initData(view.name, null);
            }
        });
        function initTime() {
            $('.timepicker').toTimePicker();
            $('.datepicker').toDatePicker();
        }
        function initData(type, callback) {
            var $loading = bindLoading("[loading-edit]");
            var moment = $('#calendar').fullCalendar('getDate');
            var date = moment.format('YYYY-MM-DD');
            // xóa hết
            $('#calendar').fullCalendar('removeEvents');
            $.get("@Url.Action("GetSchedules")" + "?employeeId=" + $("[name='employeeId']").val() + "&thisdate=" + date + "&type=" + type, function (data) {
             
                if (data != null) {
                    if (type == "agendaDay") {
                        data.data.push({
                            id: 'availableForMeeting',
                            start: date + 'T00:00:00',
                            end: date + 'T24:00:00',
                            rendering: 'background'
                        });
                        $(data.data).each(function (i, item) {
                            data.data[i].constraint = "availableForMeeting";
                        });
                    }
                    else if (type == "agendaWeek") {
                      
                        $($(".fc-day-header")).each(function (i, item) {
                            var itemJson = JSON.parse($(item).find('a').attr("data-goto"));
                            data.data.push({
                                id: 'availableForMeeting',
                                start: itemJson.date + 'T00:00:00',
                                end: itemJson.date +  'T24:00:00',
                                rendering: 'background'
                            });
                        })

                        $(data.data).each(function (i, item) {
                            data.data[i].constraint = "availableForMeeting";
                        });

                    }
                    $('#calendar').fullCalendar('addEventSource', data.data);
                    if (callback != null) {
                        callback();
                    }
                }
                $loading.waitMe('hide');
            });
        }

        function updateSlide(event) {
            var $loading = bindLoading("[loading-edit]");
            $.ajax({
                    type: "POST",
                    dataType: "json",
                    contentType: 'application/json',
                    url: "@Url.Action("AddSchedule")?employeeId=" + $("[name='employeeId']").val(),
                    data: JSON.stringify({
                        uniqueId: event._id,
                        title: event.title,
                        isChange: event.isChange,
                        contactId: event.contactId,
                        start: event.start,
                        end: event.end,
                        color: "#3f50b5"
                    }),
                    processData: false,
                    success: function (rs) {
                        if (rs.output == 1) {
                            event.contactId = rs.data.id;
                            baseCalendar.fullCalendar('updateEvent', event);
                            reGetDataGrid();
                        }
                        alertify.notify(rs.message, rs.type, 5);
                        $loading.waitMe('hide');
                    },
                    error: function (e) {
                        alert("Vui lòng F5 trình duyệt rồi thử lại!");
                    },
                    complete: function (jqxhr, txt_status) {
                        if (jqxhr.status == 502) {
                            alertify.notify("Phiên làm việc đã kết thúc F5 trình duyệt rồi thử lại.", "warning", 5);
                        }
                    }
                });
        }

        function getDataGrid(page, first = false) {
            _page = page;
            $("[grid-index-slideshow]").toGridView(first, page, function () {
                $('#external-events .itemevent').each(function () {
                    $(this).data('event', JSON.parse($(this).attr("data-event")));
                    $(this).draggable({
                        zIndex: 999,
                        revert: true,
                        revertDuration: 0
                    });
                });
            });
        }
        function reGetDataGrid() {
            getDataGrid(_page, false);
        }
    </script>
}
