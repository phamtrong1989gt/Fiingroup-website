@*@model TN.Domain.Model.DeviceModel
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@{
    Layout = "~/Views/Shared/_Admin.cshtml";
}
<style>
    .manhinhled {
        background: #eee;
        width: 100%;
    }

    .sizeHD {
    }
</style>

<form form-edit asp-action="Edit">
    @Html.AntiForgeryToken()
    <div class="block-header">
        <h2><i class="material-icons">date_range</i> Lập lịch trình chiếu <span class="label label-primary label-t">Cập nhật</span></h2>
        <ol class="breadcrumb breadcrumb-t">
            <li>
                <a href="/Admin">
                    <i class="material-icons">home</i> Trang điều khiển
                </a>
            </li>
            <li>
                <a href="@TN.Shared.Functions.FormatReturnUrl(Context.Request.Query["returnurl"], Url.Action("Index"))">
                    Danh sách thiết bị
                </a>
            </li>
            <li>
                <span>Lập lịch trình chiếu</span>
            </li>
        </ol>
    </div>
    <div class="row clearfix light-ui">
        <div class="col-md-12">
            <div class="card card-t card-loading">
                <div class="body body-tab">
                    <ul class="nav nav-tabs nav-tabs-t" role="tablist">
                        <li role="presentation" class="active">
                            <a href="@Url.Action("Edit","DeviceManager",new {id = Model.Id })" target="_blank" title="Xem thông tin chi tiết thiết bị" style="text-transform:uppercase;cursor:pointer;">
                                <i class="material-icons">edit</i>
                                @Model.Name
                            </a>
                        </li>
                    </ul>
                   <a class="tablback" title="Quay lại trang danh sách" href="@TN.Shared.Functions.FormatReturnUrl(Context.Request.Query["returnurl"], Url.Action("Index"))"><i class="material-icons">reply</i> Trang danh sách</a>
                    <div class="tab-content tab-content-t">
                        <div role="tabpanel" class="tab-pane fade  in active" id="tab101">
                            <div class="row">
                                <div class="col-md-12 mt-15">
                                    <div class="row">
                                        <div class="col-md-8">
                                            <div class="labelinfo-t bg-info mb-10">
                                                Lên lịch trình chiếu
                                            </div>
                                            <div id="calendar">
                                            </div>
                                        </div>
                                        <div class="col-md-4" grid-index-slideshow data-url="@Url.Action("Slideshow")" data-ischangeurl="false">
                                            <div class="labelinfo-t bg-info mb-10">
                                                Chọn trình chiếu
                                            </div>
                                            <div>
                                                <div class="form-group">
                                                    <div class="input-group input-group-t">
                                                        <div class="input-group-addon br-none">
                                                            Tìm kiếm
                                                        </div>
                                                        <input type="text" grid-input name="key" class="form-control input-sm form-control-t">
                                                        <div class="input-group-addon btn-group-addon btn-group-addon-form-group">
                                                            <a onclick="getDataGrid(1)" class="btn btn-icon btn-danger waves-effect"><i class="material-icons">search</i></a>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="format-list">
                                                <div id='external-events'>
                                                    <div class="listevent">
                                                        <div grid-loading grid-data>
                                                        </div>
                                                        <div class="mt-20">
                                                            <nav grid-pagination class="pg-t"></nav>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</form>

@section Scripts {
    @{ await Html.RenderPartialAsync("_ValidationScriptsPartial"); }
    <script src="~/Content/Admin/plugins/jquery-ui/jquery-ui.min.js"></script>
    <link href="~/Content/Admin/plugins/calendar/fullcalendar.min.css" rel="stylesheet" />
    <script src="~/Content/Admin/plugins/calendar/moment.min.js"></script>
    <script src="~/Content/Admin/plugins/calendar/fullcalendar.min.js"></script>
    <script src="~/Content/Admin/plugins/calendar/locale-all.js"></script>

    <script>
        var _page = 1;
        getDataGrid(false, 1);
        $("[button-submit]").toSubmit(function (rs, $this) {
            var dl = rs.data;
            var list = baseCalendar.fullCalendar('clientEvents');
            var event = list.find(x => x._id == dl.uniqueId);
            event.isChange = true;
            event.start = dl.start;
            event.end = dl.end;
            baseCalendar.fullCalendar('updateEvent', event);
        });
        var baseCalendar = $('#calendar').fullCalendar({
            header: {
                left: 'prev,next today',
                center: 'title',
                right: 'month,agendaWeek,agendaDay,listMonth'
            },
            defaultDate: '@DateTime.Now.ToString("yyyy-MM-dd")',
            locale: "vi",
            buttonIcons: true, // show the prev/next text
            weekNumbers: true,
            navLinks: true, // can click day/week names to navigate views
            editable: true,
            allDaySlot: false,
            eventLimit: true, // allow "more" link when too many events
            droppable: true, // this allows things to be dropped onto the calendar
            eventReceive: function (event) {
                updateSlide(event);
            },
            eventDrop: function (event, delta, revertFunc) {
                updateSlide(event);
            },
            eventResize: function (event, delta, revertFunc) {
                updateSlide(event);
            },
            eventClick: function (calEvent, jsEvent, view) {
                var data = {
                    uniqueId: calEvent._id,
                    isChange: calEvent.isChange,
                    slideshowId: calEvent.slideshowId,
                    scheduleId: calEvent.scheduleId,
                    start: calEvent.start,
                    end: calEvent.end,
                    title: calEvent.title
                };
                $("[popup-trong-dep-zai]").initPopup({
                    form: "[form-edit-schedule-slide]",
                    target: "#myModalNormal",
                    action: "@Url.Action("EditScheduleSlide")?data=" + JSON.stringify(data)
                });

            },
            viewRender: function (view, element) {
                initData(view.name, null);
            }
        });

        function updateSlide(event) {
            $.ajax({
                    type: "POST",
                    dataType: "json",
                    contentType: 'application/json',
                    url: '@Url.Action("AddSlide", new { id = Model.Id })',
                    data: JSON.stringify({
                        uniqueId: event._id,
                        title: event.title,
                        isChange: event.isChange,
                        slideshowId: event.slideshowId,
                        scheduleId: event.scheduleId,
                        start: event.start,
                        end: event.end,
                        color: "#3f50b5"
                    }),
                    processData: false,
                    success: function (rs) {
                        if (rs.output == 1) {
                            event.scheduleId = rs.data.id;
                            console.log(event);
                            baseCalendar.fullCalendar('updateEvent', event);
                        }
                        alertify.notify(rs.message, rs.type, 5);
                    },
                    error: function (e) {
                        alert("Vui lòng F5 trình duyệt rồi thử lại!");
                    },
                    complete: function (jqxhr, txt_status) {
                        if (jqxhr.status == 502) {
                            alertify.notify("Phiên làm việc đã kết thúc F5 trình duyệt rồi thử lại.", "warning", 5);
                        }
                    }
                });
        }


        function initData(type,callback) {
            var moment = $('#calendar').fullCalendar('getDate');
            var date = moment.format('YYYY-MM-DD');
            // xóa hết
            $('#calendar').fullCalendar('removeEvents');
            $.get("@Url.Action("GetSchedules", new { id = Model.Id })" + "?date=" + date + "&type=" + type, function (data) {
                if (data != null) {
                    if (type == "agendaDay") {
                        data.data.push({
                            id: 'availableForMeeting',
                            start: date + 'T00:00:00',
                            end: date + 'T24:00:00',
                            rendering: 'background'
                        });
                        $(data.data).each(function (i, item) {
                            data.data[i].constraint = "availableForMeeting";
                        });
                    }
                    else if (type == "agendaWeek") {
                      
                        $($(".fc-day-header")).each(function (i, item) {
                            var itemJson = JSON.parse($(item).find('a').attr("data-goto"));
                            data.data.push({
                                id: 'availableForMeeting',
                                start: itemJson.date + 'T00:00:00',
                                end: itemJson.date +  'T24:00:00',
                                rendering: 'background'
                            });
                        })

                        $(data.data).each(function (i, item) {
                            data.data[i].constraint = "availableForMeeting";
                        });

                    }
                    $('#calendar').fullCalendar('addEventSource', data.data);
                    if (callback != null) {
                        callback();
                    }
                }
            });
        }

        function getEventData() {
            var data = baseCalendar.fullCalendar('clientEvents');
            var newData = [];
            $(data).each(function (i, item) {
                newData.push({
                    uniqueId: item._id,
                    title: item.title,
                    isChange: item.isChange,
                    slideshowId: item.slideshowId,
                    scheduleId: item.scheduleId,
                    start: item.start,
                    end: item.end,
                    color: "#3f50b5"
                });
            });
            return newData;
        }
        function getDataGrid(page, first = false) {
            _page = page;
            $("[grid-index-slideshow]").toGridView(first, page, function () {
                $('#external-events .itemevent').each(function () {
                    $(this).data('event', JSON.parse($(this).attr("data-event")));
                    $(this).draggable({
                        zIndex: 999,
                        revert: true,
                        revertDuration: 0
                    });
                });
            });
        }
        function reGetDataGrid() {
            getDataGrid(_page, false);
        }
        function initTime() {
            $('.timepicker').bootstrapMaterialDatePicker({
                format: 'HH:mm',
                clearButton: true,
                date: false
            });
        }

        function removeSlide(id,dataId) {
               swal({
                    title: "Hệ thống",
                    text: "Bạn có muốn xóa dữ liệu trình chiếu không?",
                    type: "error",
                    showCancelButton: true,
                    confirmButtonColor: "#DD6B55",
                    confirmButtonText: "Có, tôi đồng ý!",
                    closeOnConfirm: false,
                    showLoaderOnConfirm: false
               }, function () {
                    $.ajax({
                    type: "POST",
                    dataType: "json",
                    contentType: 'application/json',
                        url: '@Url.Action("DeleteSlide")' + '/' + dataId,
                    processData: false,
                    success: function (rs) {
                        if (rs.output == 1) {
                            baseCalendar.fullCalendar('removeEvents', id);
                            $("[form-edit-schedule-slide] .close").click();
                        }
                        swal({
                            title: "Hệ thống!",
                            text: rs.message,
                            type: rs.type,
                            confirmButtonText: "Đóng!"
                        });
                    },
                    error: function (e) {
                        alert("Vui lòng F5 trình duyệt rồi thử lại!");
                    },
                    complete: function (jqxhr, txt_status) {
                        if (jqxhr.status == 502) {
                            alertify.notify("Phiên làm việc đã kết thúc F5 trình duyệt rồi thử lại.", "warning", 5);
                        }
                    }
                });
           });
        }
    </script>
}*@