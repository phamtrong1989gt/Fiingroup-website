@addTagHelper *, PT.UI
@using Microsoft.AspNetCore.Mvc.Localization
@using PT.Domain.Model;
@using PT.Infrastructure.Interfaces;
@using PT.Shared;
@inject IViewLocalizer Localizer;
@using System.Linq.Expressions;
@using PT.UI.Models

@{
    Layout = "~/Views/Shared/_Home.cshtml";
    string language = PT.Base.CultureHelper.GetCurrentCulture.Id;
    var portalId = 2;

    // var cplModel = new ContentPageComponentModel()
    // {
    //     CategoryId = 1002,
    //     ContentPageId = 0,
    //     Href = "",
    //     Language = language,
    //     TagId = null,
    //     Take = 6,
    //     Title = "",
    //     Type = CategoryType.Blog,
    //     View = "_News"
    // };


    // var datbModel = new ContentPageComponentModel()
    // {
    //     CategoryId = 2005,
    //     ContentPageId = 0,
    //     Href = "",
    //     Language = language,
    //     TagId = null,
    //     Take = 6,
    //     Title = "",
    //     Type = CategoryType.Blog,
    //     View = "_News"
    // };
}

@* <vc:view-module type="StaticInformation" code="KinhNghiem" language="@language" portalId="1"></vc:view-module> *@

@await Component.InvokeAsync("ViewModule", new { type = ModuleType.PhotoSlide, code = "SolutionBanner", language = language, portalId = portalId })
@await Component.InvokeAsync("ViewModule", new { type = ModuleType.StaticInformation, code = "SolutionFiinGroup", language = language, portalId = portalId }))
@await Component.InvokeAsync("ViewModule", new { type = ModuleType.StaticInformation, code = "SolutionHelp", language = language, portalId = portalId }))
@await Component.InvokeAsync("ViewModule", new { type = ModuleType.PhotoSlide, code = "SolutionPartner", language = language, portalId = portalId })
@await Component.InvokeAsync("ViewModule", new { type = ModuleType.StaticInformation, code = "SolutionDeliver", language = language, portalId = portalId }))
@await Component.InvokeAsync("ViewModule", new { type = ModuleType.StaticInformation, code = "SolutionSolutions", language = language, portalId = portalId }))
@await Component.InvokeAsync("ViewModule", new { type = ModuleType.PhotoSlide, code = "SolutionFeatured", language = language, portalId = portalId })